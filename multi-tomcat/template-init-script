#!/bin/sh
### BEGIN INIT INFO
# Provides:          tomcat
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Apache Tomcat Domain Launcher
# Description:       Launches a tomcat domain
### END INIT INFO

TOMCAT_DIR="/opt/services"
DOMAIN_SCRIPT="${TOMCAT_DIR}/bin/domains"
TOMCAT_USER="$(cat $TOMCAT_DIR/conf/user)"


# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin

# Figure out which domain(s) this init script is for
# We do this by assuming the script will be at /etc/init.d/tomcat or /etc/init.d/tomcat-someDomain
# As such the script being executed will be that or something like "/etc/rc5.d/S19tomcat-someDomain"

# Strip everything up to the first dash out
SCRIPT_NAME=$(basename $0 | perl -pe 's/^[SK][0-9]+//')

if [ "$SCRIPT_NAME" = "tomcat" ] ; then
	# Special-case where calling the init script "tomcat" just means all tomcat domains
	DOMAIN_NAME=all
else
	DOMAIN_NAME=$(echo "$SCRIPT_NAME" | perl -pe 's/^tomcat-//')
fi

# Don't allow the use of the create command through the init script (not meaningful)
if [ "$1" = "create" ] ; then
	echo "Illegal argument: $1" >&2
	exit 1
fi

# Switch to the tomcat user before invoking the control script
exec sudo -u "$TOMCAT_USER" "$DOMAIN_SCRIPT" "$1" "$DOMAIN_NAME"

:
